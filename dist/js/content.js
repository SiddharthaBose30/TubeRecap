(()=>{"use strict";const e=/(?:youtube\.com\/(?:[^\/]+\/.+\/|(?:v|e(?:mbed)?)\/|.*[?&]v=)|youtu\.be\/)([^"&?\/\s]{11})/i,t="Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.83 Safari/537.36,gzip(gfe)",n=/<text start="([^"]*)" dur="([^"]*)">([^<]*)<\/text>/g;class o extends Error{constructor(e){super(`[YoutubeTranscript] ðŸš¨ ${e}`)}}class a extends o{constructor(){super("YouTube is receiving too many requests from this IP and now requires solving a captcha to continue")}}class r extends o{constructor(e){super(`The video is no longer available (${e})`)}}class i extends o{constructor(e){super(`Transcript is disabled on this video (${e})`)}}class s extends o{constructor(e){super(`No transcripts are available for this video (${e})`)}}class c extends o{constructor(e,t,n){super(`No transcripts are available in ${e} this video (${n}). Available languages: ${t.join(", ")}`)}}class l{static fetchTranscript(e,o){var l,u,d,g,p;return u=this,d=void 0,p=function*(){const u=this.retrieveVideoId(e),d=yield fetch(`https://www.youtube.com/watch?v=${u}`,{headers:Object.assign(Object.assign({},(null==o?void 0:o.lang)&&{"Accept-Language":o.lang}),{"User-Agent":t})}),g=yield d.text(),p=g.split('"captions":');if(p.length<=1){if(g.includes('class="g-recaptcha"'))throw new a;if(!g.includes('"playabilityStatus":'))throw new r(e);throw new i(e)}const h=null===(l=(()=>{try{return JSON.parse(p[1].split(',"videoDetails')[0].replace("\n",""))}catch(e){return}})())||void 0===l?void 0:l.playerCaptionsTracklistRenderer;if(!h)throw new i(e);if(!("captionTracks"in h))throw new s(e);if((null==o?void 0:o.lang)&&!h.captionTracks.some((e=>e.languageCode===(null==o?void 0:o.lang))))throw new c(null==o?void 0:o.lang,h.captionTracks.map((e=>e.languageCode)),e);const v=((null==o?void 0:o.lang)?h.captionTracks.find((e=>e.languageCode===(null==o?void 0:o.lang))):h.captionTracks[0]).baseUrl,f=yield fetch(v,{headers:Object.assign(Object.assign({},(null==o?void 0:o.lang)&&{"Accept-Language":o.lang}),{"User-Agent":t})});if(!f.ok)throw new s(e);return[...(yield f.text()).matchAll(n)].map((e=>{var t;return{text:e[3],duration:parseFloat(e[2]),offset:parseFloat(e[1]),lang:null!==(t=null==o?void 0:o.lang)&&void 0!==t?t:h.captionTracks[0].languageCode}}))},new((g=void 0)||(g=Promise))((function(e,t){function n(e){try{a(p.next(e))}catch(e){t(e)}}function o(e){try{a(p.throw(e))}catch(e){t(e)}}function a(t){var a;t.done?e(t.value):(a=t.value,a instanceof g?a:new g((function(e){e(a)}))).then(n,o)}a((p=p.apply(u,d||[])).next())}))}static retrieveVideoId(t){if(11===t.length)return t;const n=t.match(e);if(n&&n.length)return n[1];throw new o("Impossible to retrieve Youtube video ID.")}}chrome.runtime.onMessage.addListener((function(e,t,n){var o;"get_transcript_data"===e.message&&function(e,t){void 0===t&&(t=3);var n=function(){return new Promise((function(o,a){l.fetchTranscript(e).then((function(e){e?o(e):(console.log("Transcript not found, retrying..."),t>0?setTimeout((function(){return o(n())}),1e3):a("Max retries reached. Transcript not found."))})).catch((function(e){a("Error fetching transcript:"+e)}))}))};return n()}(null===(o=null===window||void 0===window?void 0:window.location)||void 0===o?void 0:o.href).then((function(e){chrome.runtime.sendMessage({message:"transcript_data",data:e},(function(e){console.log("Transcript Data sent to Popup.HTML")}))})).catch((function(e){console.error(e)}))}))})();